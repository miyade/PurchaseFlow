[{"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\index.js":"1","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\App.js":"2","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\reportWebVitals.js":"3","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\welcome\\index.js":"4","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\categories\\index.js":"5","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\routes.js":"6","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\services\\api.js":"7","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\confirmation\\index.js":"8","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\Thankyou\\index.js":"9"},{"size":245,"mtime":1606822522474,"results":"10","hashOfConfig":"11"},{"size":241,"mtime":1606824210292,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":533,"mtime":1606824875353,"results":"14","hashOfConfig":"11"},{"size":5392,"mtime":1606921952229,"results":"15","hashOfConfig":"11"},{"size":730,"mtime":1606994774112,"results":"16","hashOfConfig":"11"},{"size":124,"mtime":1606904829224,"results":"17","hashOfConfig":"11"},{"size":1025,"mtime":1606994936332,"results":"18","hashOfConfig":"11"},{"size":536,"mtime":1606994819460,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"byu1vo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\index.js",[],["41","42"],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\App.js",[],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\reportWebVitals.js",[],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\welcome\\index.js",["43","44"],"import React from 'react';\r\nimport { Container, Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Welcome({history}){\r\n\r\n\r\n    const handleSubmit = async evt => {\r\n            evt.preventDefault();\r\n            history.push('/categories')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h2>Welcome</h2>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Button>Get Started</Button>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\categories\\index.js",["45","46","47","48"],"import React, { useEffect, useState} from 'react';\r\nimport {Label, Modal, ModalHeader, ModalBody, ModalFooter, Container, Button, Form, FormGroup, Input } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport api from '../../services/api';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport default function Welcome(){\r\n    let history = useHistory();\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [selected, setSelected] = useState();\r\n    const [modal, setModal] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [emailAddress, setEmailAddress] = useState(\"\");\r\n    const [success, setSuccess] = useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const apiURL= '/v1/product_categories';\r\n    useEffect(() => {\r\n        getEvents()\r\n    },[])\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    \r\n    const selectHandler = async (selectedItem) => {\r\n      // console.log('this works');\r\n       setSelected(true);\r\n       setSelectedCategory(selectedItem);\r\n    }\r\n\r\n\r\n    const submitHandler = async () => {\r\n\r\n        const contactData = new FormData();\r\n\r\n        contactData.append(\"firstName\", firstName)\r\n        contactData.append(\"lastName\", lastName)\r\n        contactData.append(\"emailAddress\", emailAddress)\r\n        contactData.append(\"phoneNumber\", phoneNumber)\r\n        contactData.append(\"selectedCategory\", selectedCategory)\r\n        try {\r\n            if (firstName !== \"\" &&\r\n                lastName !== \"\" &&\r\n                emailAddress !== \"\" &&\r\n                phoneNumber !== \"\" &&\r\n                selectedCategory !== \"\" \r\n              \r\n            ) {\r\n                setSuccess(true)\r\n                setTimeout(() => {\r\n                    setSuccess(false)\r\n\r\n                    history.push({ \r\n                        pathname: '/confirmation',\r\n                        state: {\r\n                            firstName: firstName,\r\n                            lastName: lastName,\r\n                            emailAddress: emailAddress,\r\n                            phoneNumber: phoneNumber,\r\n                            selectedCategory: selectedCategory\r\n                        }\r\n                       });\r\n                }, 2000)\r\n            } else {\r\n                setError(true)\r\n                setTimeout(() => {\r\n                    setError(false)\r\n                }, 2000)\r\n            }\r\n        } catch (error) {\r\n            Promise.reject(error);\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n   const getEvents = async () => {\r\n      \r\n        const response= await api.get(apiURL)\r\n        setCategories(response.data.data)\r\n   };\r\n   //console.log(categories)\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"categories-list\">\r\n                {categories.map(category => (\r\n                    <li key={category.id}>\r\n                    <strong onClick={() => selectHandler(category.attributes.name)} >{category.attributes.name}</strong>\r\n                    </li>\r\n                     ))}\r\n            </ul>\r\n            {\r\n                selected ? (\r\n                    <Button onClick={toggle}> Next </Button>\r\n                ) : \"\"\r\n            }\r\n           \r\n            <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Contact Information</ModalHeader>\r\n            <ModalBody>\r\n            \r\n            <Form>\r\n                    <FormGroup>\r\n                        <Label>First Name: </Label>\r\n                        <Input id=\"title\" type=\"text\" value={firstName} placeholder={'First Name ..'} onChange={(evt) => setFirstName(evt.target.value)} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Last Name: </Label>\r\n                        <Input id=\"description\" type=\"text\" value={lastName} placeholder={'Last Name ..'} onChange={(evt) => setLastName(evt.target.value)} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Email Address: </Label>\r\n                        <Input id=\"price\" type=\"text\" value={emailAddress} placeholder={'Email Address .. xyz@azer.xy'} onChange={(evt) => setEmailAddress(evt.target.value)} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Phone Number: </Label>\r\n                        <Input id=\"date\" type=\"text\" value={phoneNumber} placeholder={'Phone Number.. '} onChange={(evt) => setPhoneNumber(evt.target.value)} />\r\n                    </FormGroup>\r\n            </Form>\r\n\r\n                <Input type=\"checkbox\" />{' '}\r\n                Accept <a href=\"\">Terms & Conditions</a>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <FormGroup>\r\n                    <Button onClick={()=>submitHandler()} className=\"submit-btn\" >Submit</Button>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Button className=\"secondary-btn\" onClick={() => toggle()}>\r\n                        Cancel\r\n                    </Button>\r\n                </FormGroup>\r\n            </ModalFooter>\r\n            </Modal>\r\n\r\n        </div>\r\n       \r\n    )\r\n}","C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\routes.js",[],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\services\\api.js",[],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\confirmation\\index.js",["49","50","51","52"],"C:\\Users\\Maram\\PurchaseFlow\\purchaseflow-client\\src\\pages\\Thankyou\\index.js",["53","54","55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":35,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"62","severity":1,"message":"66","line":2,"column":46,"nodeType":"64","messageId":"65","endLine":2,"endColumn":51},{"ruleId":"62","severity":1,"message":"67","line":2,"column":60,"nodeType":"64","messageId":"65","endLine":2,"endColumn":69},{"ruleId":"62","severity":1,"message":"68","line":19,"column":12,"nodeType":"64","messageId":"65","endLine":19,"endColumn":19},{"ruleId":"62","severity":1,"message":"69","line":20,"column":12,"nodeType":"64","messageId":"65","endLine":20,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":132,"column":24,"nodeType":"72","endLine":132,"endColumn":35},{"ruleId":"62","severity":1,"message":"73","line":2,"column":29,"nodeType":"64","messageId":"65","endLine":2,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":2,"column":35,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"62","severity":1,"message":"66","line":2,"column":46,"nodeType":"64","messageId":"65","endLine":2,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":17,"column":9,"nodeType":"76","endLine":17,"endColumn":11,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"78","line":2,"column":21,"nodeType":"64","messageId":"65","endLine":2,"endColumn":27},{"ruleId":"62","severity":1,"message":"73","line":2,"column":29,"nodeType":"64","messageId":"65","endLine":2,"endColumn":33},{"ruleId":"62","severity":1,"message":"63","line":2,"column":35,"nodeType":"64","messageId":"65","endLine":2,"endColumn":44},{"ruleId":"62","severity":1,"message":"66","line":2,"column":46,"nodeType":"64","messageId":"65","endLine":2,"endColumn":51},{"ruleId":"74","severity":1,"message":"75","line":14,"column":9,"nodeType":"76","endLine":14,"endColumn":11,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Container' is defined but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.","ArrayExpression",["82"],"'Button' is defined but never used.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"84","fix":"86"},"Update the dependencies array to be: [location.state]",{"range":"87","text":"88"},{"range":"89","text":"88"},[464,466],"[location.state]",[373,375]]